{"version":3,"sources":["../../server/index.ts"],"names":["fs","path","http","https","express","compression","cookieParser","morgan","__front_src_dir","__project_dir","__public_dir","backend","frontend","server","privateKey","set","join","use","static","json","urlencoded","extended","readFileSync","certificate","credentials","key","cert","httpServer","createServer","httpsServer","listen","console","log"],"mappings":"OAAOA,OAAQ,YACRC,SAAU,cACVC,SAAU,cACVC,UAAW,eAEXC,YAAa,iBAEbC,gBAAiB,qBACjBC,iBAAkB,uBAClBC,WAAY,gBACXC,gBAAiBC,cAAeC,YAAgC,KAAb,qBACpDC,YAAa,8BACbC,aAAc,wBAErB,MAAMC,OAAST,QAAO,EAmBhBU,YAhBND,OAAOE,IAAI,cAAe,KAAK,EAC/BF,OAAOE,IAAI,QAASd,KAAKe,KAAKR,gBAAiB,OAAO,CAAC,EAGvDK,OAAOI,IAAIb,QAAQc,OAAOR,YAAY,CAAC,EAGvCG,OAAOI,IAAIZ,YAAW,CAAE,EACxBQ,OAAOI,IAAIV,OAAO,KAAK,CAAC,EACxBM,OAAOI,IAAIb,QAAQe,KAAI,CAAE,EACzBN,OAAOI,IAAIb,QAAQgB,WAAW,CAACC,SAAU,CAAA,CAAK,CAAC,CAAC,EAChDR,OAAOI,IAAIX,aAAY,CAAE,EAEzBK,QAAQE,MAAM,EACdD,SAASC,MAAM,EAEIb,GAAGsB,aAAarB,KAAKe,KAAKP,cAAe,sBAAsB,EAAG,OAAO,GACtFc,YAAcvB,GAAGsB,aAAarB,KAAKe,KAAKP,cAAe,sBAAsB,EAAG,MAAM,EAEtFe,YAAc,CAChBC,IAAKX,WACLY,KAAMH,W,EAGJI,WAAazB,KAAK0B,aAAaf,MAAM,EACrCgB,YAAc1B,MAAMyB,aAAaJ,YAAaX,MAAM,EAE1Dc,WAAWG,OAAO,KAAM,KACpBC,QAAQC,IAAI,0CAA0C,CAC1D,CAAC,EACDH,YAAYC,OAAO,KAAM,KACrBC,QAAQC,IAAI,2CAA2C,CAC3D,CAAC","file":"index.js","sourcesContent":["import fs from 'fs';\r\nimport path from 'path';\r\nimport http from 'http';\r\nimport https from 'https';\r\n\r\nimport express from 'express';\r\n\r\nimport compression from 'compression';\r\nimport cookieParser from 'cookie-parser';\r\nimport morgan from 'morgan';\r\nimport {__front_src_dir, __project_dir, __public_dir} from \"./config.js\";\r\nimport backend from \"./loaders/backend.js\";\r\nimport frontend from \"./loaders/frontend.js\";\r\n\r\nconst server = express();\r\n\r\n// pug\r\nserver.set('view engine', 'pug');\r\nserver.set('views', path.join(__front_src_dir, 'views'));\r\n\r\n// process public files\r\nserver.use(express.static(__public_dir));\r\n\r\n// compress all responses with gzip\r\nserver.use(compression());\r\nserver.use(morgan('dev'));\r\nserver.use(express.json());\r\nserver.use(express.urlencoded({extended: false}));\r\nserver.use(cookieParser());\r\n\r\nbackend(server);\r\nfrontend(server);\r\n\r\nconst privateKey = fs.readFileSync(path.join(__project_dir, 'ssl_keys/example.key'), 'utf-8');\r\nconst certificate = fs.readFileSync(path.join(__project_dir, 'ssl_keys/example.crt'), 'utf8');\r\n\r\nconst credentials = {\r\n    key: privateKey,\r\n    cert: certificate,\r\n};\r\n\r\nconst httpServer = http.createServer(server);\r\nconst httpsServer = https.createServer(credentials, server);\r\n\r\nhttpServer.listen(8080, () => {\r\n    console.log('Server started at http://localhost:8080/');\r\n});\r\nhttpsServer.listen(8443, () => {\r\n    console.log('Server started at https://localhost:8443/');\r\n});"]}