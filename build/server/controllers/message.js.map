{"version":3,"sources":["../../server/controllers/message.ts"],"names":["MessageController","messageRepo","constructor","this","getMessagesInChat","async","req","res","user_id","parseInt","params","friend_id","messages","await","status","json","error","message","getChats","chats"],"mappings":"qBAGqBA,kBACGC,YAApBC,YAAoBD,GAAAE,KAAAF,YAAAA,CAAiC,CAE9CG,kBAAoBC,MAAOC,EAAgBC,KAC9C,IACI,IAAMC,EAAkBC,SAASH,EAAII,OAAW,EAAC,EAC3CC,EAAoBF,SAASH,EAAII,OAAkB,SAAC,EAEpDE,EAAWC,MAAMV,KAAKF,YAAYG,kBAAkBI,EAASG,CAAS,EAEvEC,EAGDL,EAAIO,OAAO,GAAG,EAAEC,KAAKH,CAAQ,EAF7BL,EAAIO,OAAO,GAAG,EAAEC,KAAK,CAAEC,yBAA0BR,SAAeG,kBAA0B,CAAE,C,CAIlG,MAAOK,GACLT,EAAIO,OAAO,GAAG,EAAEC,KAAK,CAAEC,MAAOA,EAAMC,OAAO,CAAE,C,CAErD,EAEOC,SAAWb,MAAOC,EAAgBC,KACrC,IACI,IAAMC,EAAkBC,SAASH,EAAII,OAAW,EAAC,EAE3CS,EAAQN,MAAMV,KAAKF,YAAYiB,SAASV,CAAO,EAErDD,EAAIO,OAAO,GAAG,EAAEC,KAAKI,CAAK,C,CAC5B,MAAOH,GACLT,EAAIO,OAAO,GAAG,EAAEC,KAAK,CAAEC,MAAOA,EAAMC,OAAO,CAAE,C,CAErD,C","file":"message.js","sourcesContent":["import MessageRepository from \"../repository/message.js\";\r\nimport e from \"express\";\r\n\r\nexport default class MessageController {\r\n    constructor(private messageRepo: MessageRepository) {}\r\n\r\n    public getMessagesInChat = async (req: e.Request, res: e.Response) => {\r\n        try {\r\n            const user_id: number = parseInt(req.params[\"id\"]);\r\n            const friend_id: number = parseInt(req.params[\"friend_id\"]);\r\n\r\n            const messages = await this.messageRepo.getMessagesInChat(user_id, friend_id);\r\n\r\n            if (!messages) {\r\n                res.status(404).json({ error: `Chat between id ${user_id} and ${friend_id} does not exist` });\r\n            } else {\r\n                res.status(200).json(messages);\r\n            }\r\n        } catch (error: any) {\r\n            res.status(404).json({ error: error.message });\r\n        }\r\n    }\r\n\r\n    public getChats = async (req: e.Request, res: e.Response) => {\r\n        try {\r\n            const user_id: number = parseInt(req.params[\"id\"]);\r\n\r\n            const chats = await this.messageRepo.getChats(user_id);\r\n\r\n            res.status(200).json(chats);\r\n        } catch (error: any) {\r\n            res.status(500).json({ error: error.message });\r\n        }\r\n    }\r\n}"]}